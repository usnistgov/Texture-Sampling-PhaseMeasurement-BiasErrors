%% Import Script for PoleFigure Data
%
% This script was automatically created by the import wizard. You should
% run the whoole script or parts of it in order to import your data. There
% is no problem in making any changes to this script.

%% Specify Crystal and Specimen Symmetries
clc
clear
close all
%Set sample and crystal symmetry
cs = crystalSymmetry('m-3m');
ss = specimenSymmetry('orthorhombic');

% To align pole figures with mplstereonet, 
 plotx2north % X up, Y to the left

% Set colormap explicitly
run('ColorMap.m')

%austenite and ferrite pole figures to plot
h_ferrite = {Miller(1,1,0,cs),Miller(2,0,0,cs),Miller(2,1,1,cs),Miller(2,2,0,cs),Miller(3,1,0,cs),Miller(2,2,2,cs)} ;
h_austenite = {Miller(1,1,1,cs),Miller(2,0,0,cs),Miller(2,2,0,cs),Miller(3,1,1,cs),Miller(2,2,2,cs),Miller(4,0,0,cs),Miller(3,3,1,cs),Miller(4,2,0,cs)} ;

%SavePaths
savepath='ExpFigures';
mkdir(savepath)
% 
% pname = 'C:\Research\Texture-Sampling-PhaseMeasurement-BiasErrors-master\Matlab\MtexData';
% 
% % which files to be imported
% fname = {...
%   [pname '\alpha1F-HW10.maa'],...
%   [pname '\alpha2F-HW10.maa'],...
%   [pname '\alpha3F-HW10.maa'],...
%   [pname '\alpha4F-HW10.maa'],...
%   [pname '\AlphaFiberF-HW10.maa'],...
%   [pname '\Gamma1F-HW10.maa'],...
%   [pname '\GammaFiber2F-HW10.maa'],...
%   [pname '\GossF-HW10.maa'],...
%   [pname '\o554F-HW10.maa'],...
%   [pname '\RGossF-HW10.maa'],...
%   [pname '\ShearF-HW10.maa'],...
%   [pname '\UniformF-HW10.maa'],...
%   };

% pname = 'C:\Research\Texture-Sampling-PhaseMeasurement-BiasErrors-master\Matlab\MtexData';
pname = '/Users/creuzige/Documents/NIST_Research/GitHub/Texture-Sampling-PhaseMeasurement-BiasErrors/Matlab/MtexData';

% which files to be imported
% fname = [pname '\alpha1F-HW10.maa'];
fname = [pname '/alpha1F-HW10.maa'];

%% Specify Miller Indice
% 
% h = { ...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   Miller(1,0,0,CS),...
%   };
% % 
%% Import the Data

% create a Pole Figure variable containing the data

pf = PoleFigure.load(fname,h_ferrite,cs,ss,'interface','generic');
%odf = calcODF(pf, cs,ss, 'halfwidth',5*degree, 'resolution',5*degree)


%pf = calcPoleFigure(odf,h_ferrite);
 %   figure; plotPDF(odf,h_ferrite, cs,ss, 'projection','eangle', 'antipodal');CLim(gcm,[0, 4]);mtexColorbar;
 figure; plot(pf,h_ferrite, cs,ss, 'projection','eangle', 'antipodal');CLim(gcm,[0, 4]);mtexColorbar;


% export_fig(strcat(savepath,'/',pname,'-PF.tiff'),'-r150')
